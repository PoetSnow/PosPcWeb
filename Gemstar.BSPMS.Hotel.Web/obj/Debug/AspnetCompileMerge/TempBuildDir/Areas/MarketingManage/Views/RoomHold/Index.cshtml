@using Kendo.Mvc.UI
@using Gemstar.BSPMS.Hotel.Services.EntityProcedures;
@using Gemstar.BSPMS.Common.Extensions;
@model Gemstar.BSPMS.Hotel.Web.Areas.MarketingManage.Models.RoomHold.RoomHoldQueryModel
@{
    ViewBag.Title = "保留房设置";
}

@section headerContent{
    <style type="text/css">
        html.body, div.wrap, div#grid {
            height: 100%;
        }

        .spana {
            display: block;
            width: 100%;
            height: 100%;
        }

        #divchage input {
            border-radius: 3px;
            width: 40px;
            height: 20px;
            margin-left: 5px;
            border: 1px solid gray;
        }

        #divhead span {
            display: inline-block;
            width: 55px;
            margin-left: 5px;
        }

        #lupdateroomhold {
            position: absolute;
            top: 50px;
            background-color: white;
            color: black;
            line-height: 30px;
            height: auto;
            padding-bottom: 30px;
            width: 640px;
            text-align: center;
            border: 1px solid gray;
            -webkit-box-shadow: 1px 1px 3px #292929;
            -moz-box-shadow: 1px 1px 3px #292929;
            box-shadow: 1px 1px 3px #292929;
            left: 50%;
            margin-left: -320px;
            border-radius: 3px;
        }

        .btn {
            width: 50px;
            height: 34px;
            border: 1px solid #ccc;
            background-color: #dadada;
            border-radius: 4px;
            text-align: center;
            color: #333;
            cursor: pointer;
            padding-right: 10px;
            padding-left: 10px;
            margin-left: 4px;
        }


        .dialog-title {
            background-color: rgb(0,71,147);
            cursor: move;
            height: 30px;
            line-height: 30px;
            color: white;
        }

        .dialog-content {
            padding: 4px;
        }

        .updateroomholdtable td {
            height: 36px;
        }
    </style>
}
@(Html.Kendo().Grid<UpQueryRoomHoldInfosResultForshow>()
    .Name("grid")
    .Columns(c =>
    {
        c.Bound(w => w.RoomTypeName).Width(200).Title("房间类型").Locked(true).ClientFooterTemplate("合计:");
        c.Bound(w => w.TotalRooms).Width(60).Title("总房数").Locked(true).ClientFooterTemplate("<span style='display:block; text-align:center' >#=data.TotalRooms.sum #</span>")
            .HeaderHtmlAttributes(new { style = "text-align:center;" })
            .HtmlAttributes(new { style = "text-align:center;" });
        for (int i = 0; i < Model.Days; i++)
        {
            var fieldName = string.Format("Day{0}", (i + 1).ToString().PadLeft(2, '0'));
            var currentDay = Model.BeginDate.Value.AddDays(i);
            c.Bound(fieldName)
            .Width(100)
            .Title(string.Format("{0}<br/>{1}", currentDay.ToString("MM月dd日"), currentDay.DayOfWeek.ToChineseString()))
            .HeaderHtmlAttributes(new { style = "text-align:center;" })
            .HtmlAttributes(new { style = "text-align:center;", dataday = currentDay.ToString("yyyy-MM-dd HH:mm:ss") })
             .ClientTemplate(string.Format("<span class='spana'><span class='AvailbleRoomQty'>#=data.{0}.AvailbleRoomQty#</span>/<span class='SettingRoomQty'>#=data.{0}.SettingRoomQty#</span></span>", fieldName))
            .ClientFooterTemplate(string.Format("<span style='display:block; text-align:center ; '><span class='AvailbleRoomQty'>#=data['{0}.AvailbleRoomQty'].sum# </span>/<span class='SettingRoomQty'>#=data['{0}.SettingRoomQty'].sum# </span></span>", fieldName))
           ;
        }
    })
    .DataSource(d => d.Ajax().Read(c => c.Action("AjaxQuery", "RoomHold").Data("setQueryPara")).Aggregates(a =>
    {
        a.Add(w => w.TotalRooms).Sum();
        a.Add(w => w.Day01.AvailbleRoomQty).Sum();
        a.Add(w => w.Day01.SettingRoomQty).Sum();
        a.Add(w => w.Day02.AvailbleRoomQty).Sum();
        a.Add(w => w.Day02.SettingRoomQty).Sum();
        a.Add(w => w.Day03.AvailbleRoomQty).Sum();
        a.Add(w => w.Day03.SettingRoomQty).Sum();
        a.Add(w => w.Day04.AvailbleRoomQty).Sum();
        a.Add(w => w.Day04.SettingRoomQty).Sum();
        a.Add(w => w.Day05.AvailbleRoomQty).Sum();
        a.Add(w => w.Day05.SettingRoomQty).Sum();
        a.Add(w => w.Day06.AvailbleRoomQty).Sum();
        a.Add(w => w.Day06.SettingRoomQty).Sum();
        a.Add(w => w.Day07.AvailbleRoomQty).Sum();
        a.Add(w => w.Day07.SettingRoomQty).Sum();
        a.Add(w => w.Day08.AvailbleRoomQty).Sum();
        a.Add(w => w.Day08.SettingRoomQty).Sum();
        a.Add(w => w.Day09.AvailbleRoomQty).Sum();
        a.Add(w => w.Day09.SettingRoomQty).Sum();
        a.Add(w => w.Day10.AvailbleRoomQty).Sum();
        a.Add(w => w.Day10.SettingRoomQty).Sum();
        a.Add(w => w.Day11.AvailbleRoomQty).Sum();
        a.Add(w => w.Day11.SettingRoomQty).Sum();
        a.Add(w => w.Day12.AvailbleRoomQty).Sum();
        a.Add(w => w.Day12.SettingRoomQty).Sum();
        a.Add(w => w.Day13.AvailbleRoomQty).Sum();
        a.Add(w => w.Day13.SettingRoomQty).Sum();
        a.Add(w => w.Day14.AvailbleRoomQty).Sum();
        a.Add(w => w.Day14.SettingRoomQty).Sum();
        a.Add(w => w.Day15.AvailbleRoomQty).Sum();
        a.Add(w => w.Day15.SettingRoomQty).Sum();
        a.Add(w => w.Day16.AvailbleRoomQty).Sum();
        a.Add(w => w.Day16.SettingRoomQty).Sum();
        a.Add(w => w.Day17.AvailbleRoomQty).Sum();
        a.Add(w => w.Day17.SettingRoomQty).Sum();
        a.Add(w => w.Day18.AvailbleRoomQty).Sum();
        a.Add(w => w.Day18.SettingRoomQty).Sum();
        a.Add(w => w.Day19.AvailbleRoomQty).Sum();
        a.Add(w => w.Day19.SettingRoomQty).Sum();
        a.Add(w => w.Day20.AvailbleRoomQty).Sum();
        a.Add(w => w.Day20.SettingRoomQty).Sum();
        a.Add(w => w.Day21.AvailbleRoomQty).Sum();
        a.Add(w => w.Day21.SettingRoomQty).Sum();
        a.Add(w => w.Day22.AvailbleRoomQty).Sum();
        a.Add(w => w.Day22.SettingRoomQty).Sum();
        a.Add(w => w.Day23.AvailbleRoomQty).Sum();
        a.Add(w => w.Day23.SettingRoomQty).Sum();
        a.Add(w => w.Day24.AvailbleRoomQty).Sum();
        a.Add(w => w.Day24.SettingRoomQty).Sum();
        a.Add(w => w.Day25.AvailbleRoomQty).Sum();
        a.Add(w => w.Day25.SettingRoomQty).Sum();
        a.Add(w => w.Day26.AvailbleRoomQty).Sum();
        a.Add(w => w.Day26.SettingRoomQty).Sum();
        a.Add(w => w.Day27.AvailbleRoomQty).Sum();
        a.Add(w => w.Day27.SettingRoomQty).Sum();
        a.Add(w => w.Day28.AvailbleRoomQty).Sum();
        a.Add(w => w.Day28.SettingRoomQty).Sum();
        a.Add(w => w.Day29.AvailbleRoomQty).Sum();
        a.Add(w => w.Day29.SettingRoomQty).Sum();
        a.Add(w => w.Day30.AvailbleRoomQty).Sum();
        a.Add(w => w.Day30.SettingRoomQty).Sum();
        a.Add(w => w.Day31.AvailbleRoomQty).Sum();
        a.Add(w => w.Day31.SettingRoomQty).Sum();
    }).PageSize(Gemstar.BSPMS.Common.Extensions.UrlHelperExtension.GetPageSizeForCookies(Request)))
    .Sortable()
    .Scrollable(s => s.Height("100%"))
    .Pageable(pageable => pageable.PageSizes(Gemstar.BSPMS.Common.Tools.CommonHelper.PageSizes))
    .Pageable(pageable => pageable.Messages(c => c.ItemsPerPage("")))
    .ToolBar(c => c.Template(@<text>
        <form method="post">
            <div class="toolbar">
                <label for="ChannelId">渠道：</label>
                @(Html.Kendo().DropDownListFor(m => m.ChannelId).BindTo(ViewData["Channelid"] as IEnumerable<SelectListItem>).OptionLabel("所有渠道"))
                <label for="BeginDate">开始日期：</label>
                @(Html.Kendo().DatePickerFor(m => m.BeginDate).HtmlAttributes(new { style = "width:110px" }).Format("yyyy-MM-dd"))
                <label for="Days" style="margin-left:5px;">天数：</label>
                @(Html.Kendo().NumericTextBoxFor(m => m.Days).Min(1).Max(31).Format("#").Decimals(0).HtmlAttributes(new { style = "width:60px;" }))
                @(Html.Kendo().Button().Name("queryButton").Content("查询").Icon("search"))

                <input type="button" value="修改" onclick="updateroomhold.style.display = '';" class="k-button" />
                <div style="float:right;padding-top:2px;padding-right:20px;"><label style="color: red;">单元格内容:剩余配额 / 配额</label></div>
            </div>
        </form>
    </text>))
)

<div id="updateroomhold" align="center" style="display:none;margin-top:30px;width:30%;margin-left:auto;margin-right:auto;TEXT-ALIGN: center;">
    <div id="lupdateroomhold" align="center">
        <div style="text-align:left;font-size:1.2em;" class="dialog-title"> 　修改保留房信息  <div style="float:right;line-height:30px;height:30px;cursor:pointer;padding-right:4px;"> <span onclick="updateroomhold.style.display = 'none';" role="presentation" class="k-icon k-i-close">Close</span> </div></div>
        <hr width="100%" style="background-color:red;height:1px;" />
        <div class="dialog-content">
            <div id="dv" style="margin-top:20px;text-align:left;margin-left:55px;">
                <table style="width:520px;" class="updateroomholdtable">
                    <tr>
                        <td> 渠道：</td>
                        <td>
                            @(Html.Kendo().DropDownList().Name("qudao").BindTo(ViewData["Channelid"] as IEnumerable<SelectListItem>).OptionLabel("所有渠道").HtmlAttributes(new { id = "qudao", style = " width:100%" }))
                        </td>
                    </tr>
                    <tr>
                        <td>房间类型：</td>
                        <td>@Html.Kendo().MultiSelect().Name("RoomTypeidsMultiSelect").HtmlAttributes(new { style = " width:100%", id = "roomtype" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("listItemForRoomType", "RoomHold")); })</td>
                    </tr>
                    <tr>
                        <td>日期从：</td>
                        <td><input id='begintime' />　至　<input id='endtime' /> <span>　　</span></td>
                    </tr>
                </table>
            </div>
            <div id="divDay" style="margin-top:25px;text-align:left;padding-left:52px;">
                <span style="display: inline-block; width: 103px;"><input type="radio" name="selTimeType" value="1" id="rad1" checked="checked" onclick="enabletext(this)" /> <label for="rad1">每天保留房数：</label></span>
                <input type="text" id="textday" name="daytext" onblur="checkText(this); filltext(this);" style="width:40px;height:20px;border:1px solid gray;border-radius:3px;" />
            </div>
            <div id="divWeek">
                <table>
                    <tr>
                        <td style="text-align:right;">　　</td>
                        <td>
                            <div id="divhead" style="margin-top:5px;text-align:center;padding-left:50px;">
                                <span>　　　　　</span>  <span>周一</span><span>周二</span><span>周三</span><span>周四</span><span>周五</span><span>周六</span><span>周日</span><br />
                            </div>
                            <div id="divchage" style="margin-top:1px;padding-left:18px;">
                                <input type="radio" name="selTimeType" value="2" style="width:13px;height:13px;" id="rad2" onclick="enabletext(this)" /> <label for="rad2">每周保留房数：</label>
                                <input name="weektext" type="text" id="text1" onblur="checkText(this)" />
                                <input name="weektext" type="text" id="text2" onblur="checkText(this)" />
                                <input name="weektext" type="text" id="text3" onblur="checkText(this)" />
                                <input name="weektext" type="text" id="text4" onblur="checkText(this)" />
                                <input name="weektext" type="text" id="text5" onblur="checkText(this)" />
                                <input name="weektext" type="text" id="text6" onblur="checkText(this)" />
                                <input name="weektext" type="text" id="text7" onblur="checkText(this)" />
                            </div>
                        </td>
                    </tr>
                </table>
            </div>


            <div style="margin-top:10px;">
                <input type="button" value="保存" onclick="changeRoomhold()" class="k-button" />
                <input type="button" value="返回" onclick="updateroomhold.style.display = 'none';" class="k-button" />
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script type="text/javascript">
        function setQueryPara() {
            return {
                ChannelId: $("#ChannelId").data("kendoDropDownList").value(),
                BeginDate: $("#BeginDate").data("kendoDatePicker").value(),
                Days: $("#Days").data("kendoNumericTextBox").value()
            };
        }

        //ajax方法
        function jsonajax(urls) {
            var events = {};
            var Rand = Math.random();
            $.ajax({
                url: urls + "&rand=" + Rand,
                success: function (data) {
                    events = data;
                },
                async: false
            });
            return events;
        }

        //初始化日期时间
        $(document).ready(function () {
            $("input[name=weektext]").attr("readonly", "readonly");
            $("#begintime").kendoDatePicker({ culture: "zh-CN", format: "yyyy-MM-dd" });
            $("#endtime").kendoDatePicker({ culture: "zh-CN", format: "yyyy-MM-dd" });
        });
        //修改保留房设置   
        function changeRoomhold() {

            var begintime = new Date($("#begintime").val());
            var endtime = new Date($("#endtime").val());
            if ($("#begintime").val() == "") {
                jAlert("请输入开始日期！", "知道了"); return;
            }
            if ($("#endtime").val() == "") {
                jAlert("请输入结束日期！", "知道了"); return;
            }
            if (begintime > endtime) {
                jAlert("开始日期不能大于结束日期！", "知道了");
                return;
            }
            begintime = begintime.getFullYear() + "-" + (begintime.getMonth() + 1) + "-" + begintime.getDate();
            endtime = endtime.getFullYear() + "-" + (endtime.getMonth() + 1) + "-" + endtime.getDate();
            var channelid = $("#qudao").data("kendoDropDownList").value();

            var roomtypeid = $("#roomtype").val();
            if (roomtypeid == null) {
                jAlert("请选择房间类型", "知道了"); return;
            }
            var roomtypearr = roomtypeid.toString().split(',');
            if (roomtypeid.indexOf("all") > -1) {
                roomtypearr = $("#roomtype option").map(function () { return $(this).val(); }).get().join(",").replace("all,", "").split(','); //获取全部的房间类型编号
            }
            var events = "";
            var channelname = $("#qudao").data("kendoDropDownList").text();
            if (channelid == "") {
                var arr = $("#qudao").data("kendoDropDownList").dataItems();
                if (arr.length == 0) {
                    jAlert("没有可设置的渠道信息！", "知道了"); return;
                }
                for (var i = 0; i < arr.length; i++) {
                    channelid = arr[i].Value; channelname = arr[i].Text;
                    if (channelid != "") {
                        for (var j = 0; j < roomtypearr.length; j++) {
                            roomtypeid = roomtypearr[j];
                            events = updateRH(begintime, endtime, channelid, roomtypeid, channelname);
                        }
                    }
                }

            }
            else {
                for (var i = 0; i < roomtypearr.length; i++) {
                    roomtypeid = roomtypearr[i];
                    events = updateRH(begintime, endtime, channelid, roomtypeid, channelname);
                }
            }
            if (events == "成功") {
                updateroomhold.style.display = 'none';
                history.go(0);
            } else {
                if (events == "失败") {
                    jAlert("修改" + events, "知道了");
                } else {
                    jAlert(events, "知道了");
                }
            }
        }
        function enabletext(obj) {
            if ($(obj).val() == "1") {
                $("input[name=weektext]").attr("readonly", "readonly");
                $("input[name=daytext]").attr("readonly", false);
            } else {
                $("input[name=daytext]").attr("readonly", "readonly");
                $("input[name=weektext]").attr("readonly", false);
            }
        }
        function updateRH(begintime, endtime, channelid, roomtypeid, channelname) {

            var selval = $('input[name="selTimeType"]:checked ').val();
            var valarr = "";
            if (selval == "2") {
                for (var i = 1; i <= 7; i++) {
                    valarr += ($("#text" + i).val() == "" ? "0" : $("#text" + i).val()) + ",";
                }
            } else {
                for (var i = 1; i <= 7; i++) {
                    valarr += ($("#textday").val() == "" ? "0" : $("#textday").val()) + ",";
                }
            }
            if (channelid == "") {
                jAlert("请选择渠道！", "知道了");
                return;
            }
            if (roomtypeid == "") {
                jAlert("请选择房间类型！", "知道了");
                return;
            }
            var roomtypename = $("#roomtype option:selected").text();
            var events = jsonajax("/RoomHold/changeRoomhold?begintime=" + begintime + "&endtime=" + endtime + "&strarr=" + valarr + "&channelid=" + channelid + "&roomtype=" + roomtypeid + "&channelname=" + channelname + "&roomtypename=" + roomtypename);
            return events;
        }
        function checkText(obj) {
            if (isNaN($(obj).val())) {
                $(obj).val("");
            }
        }
        function filltext(obj) {
            var aaa = $("#divchage").children();
            for (var i = 0; i < aaa.length; i++) {
                if (aaa[i].value != "2") {//单选按钮
                    aaa[i].value = $(obj).val();
                }
            }
        }

        $(function () {
            $("#guaranteeTime").kendoTimePicker();
        });
        var Dragging = function (validateHandler) { //参数为验证点击区域是否为可移动区域，如果是返回欲移动元素，负责返回null
            var draggingObj = null; //dragging Dialog
            var diffX = 0;
            var diffY = 0;
            function mouseHandler(e) {
                switch (e.type) {
                    case 'mousedown':
                        draggingObj = validateHandler(e);//验证是否为可点击移动区域
                        if (draggingObj != null) {
                            diffX = e.clientX - draggingObj.offsetLeft - 320;
                            diffY = e.clientY - draggingObj.offsetTop;
                        }
                        break;

                    case 'mousemove':
                        if (draggingObj) {
                            draggingObj.style.left = (e.clientX - diffX) + 'px';
                            draggingObj.style.top = (e.clientY - diffY) + 'px';
                        }
                        break;

                    case 'mouseup':
                        draggingObj = null;
                        diffX = 0;
                        diffY = 0;
                        break;
                }
            };

            return {
                enable: function () {
                    document.addEventListener('mousedown', mouseHandler);
                    document.addEventListener('mousemove', mouseHandler);
                    document.addEventListener('mouseup', mouseHandler);
                },
                disable: function () {
                    document.removeEventListener('mousedown', mouseHandler);
                    document.removeEventListener('mousemove', mouseHandler);
                    document.removeEventListener('mouseup', mouseHandler);
                }
            }
        }

        function getDraggingDialog(e) {
            var target = e.target;
            while (target && target.className.indexOf('dialog-title') == -1) {
                target = target.offsetParent;
            }
            if (target != null) {
                return target.offsetParent;
            } else {
                return null;
            }
        }

        Dragging(getDraggingDialog).enable();
    </script>
}
