@model Gemstar.BSPMS.Hotel.Web.Areas.PosManage.Models.BasicDataPosAdvanceFunc.PosAdvanceFuncEditViewModel
<script type="text/javascript">
    function moduleChanged() {
        var Refeid = $("#RefeId").data("kendoMultiSelect");
        Refeid.dataSource.read();
    }
    function posCode_paras() {
        var module = $("#Module").data("kendoDropDownList");
        var moduleCode = module.value();
        return {
            moduleCode: moduleCode
        };
    }
    
</script>
@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.OriginJsonData)
    @Html.HiddenFor(m => m.Id)
    <table class="editFormTable">
        <tr>
            <td class="textright">@Html.LabelFor(m => m.FuncCode)</td>
            <td>@Html.Kendo().TextBoxFor(m => m.FuncCode).HtmlAttributes(new { style = "width:100%;",@readonly = "readonly" })</td>
            <td>@Html.ValidationMessageFor(m => m.FuncCode, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.Name1)</td>
            <td>@Html.Kendo().TextBoxFor(m => m.Name1).HtmlAttributes(new { style = "width:100%;" })</td>
            <td>@Html.ValidationMessageFor(m => m.Name1, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.Module)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.Module).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosModules", "BasicDataPosPos", new { rnd = new Random().NextDouble() })); }).Events(e => e.Change("moduleChanged"))</td>
            <td>@Html.ValidationMessageFor(m => m.Module, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.RefeId)</td>
            <td>@Html.Kendo().MultiSelectFor(e => e.RefeId).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosRefeByModules", "BasicDataPosRefe", new { rnd = new Random().NextDouble() }).Data("posCode_paras")).ServerFiltering(true); }).Value(Model.RefeIdList)</td>
            <td>@Html.ValidationMessageFor(m => m.RefeId, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.IsUsed)</td>
            <td>@Html.Kendo().CheckBoxFor(e => e.IsUsed).HtmlAttributes(new { style = " width:100%" })</td>
            <td>@Html.ValidationMessageFor(m => m.IsUsed, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.IsSave)</td>
            <td>@Html.Kendo().CheckBoxFor(e => e.IsSave).HtmlAttributes(new { style = " width:100%" })</td>
            <td>@Html.ValidationMessageFor(m => m.IsSave, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.IsIpad)</td>
            <td>@Html.Kendo().CheckBoxFor(e => e.IsIpad).HtmlAttributes(new { style = " width:100%" })</td>
            <td>@Html.ValidationMessageFor(m => m.IsIpad, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.FuncType)</td>
            <td>@Html.Kendo().MultiSelectFor(e => e.FuncType).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosMode", "BasicDataPosAdvanceFunc", new { rnd = new Random().NextDouble() })).ServerFiltering(true); }).Value(Model.FuncTypeList)</td>
            <td>@Html.ValidationMessageFor(m => m.FuncType, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.FuncGrade)</td>
            <td>@Html.Kendo().MultiSelectFor(e => e.FuncGrade).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForFuncGrade", "BasicDataPosAdvanceFunc", new { rnd = new Random().NextDouble() })).ServerFiltering(true); }).Value(Model.FuncGradeList)</td>
            <td>@Html.ValidationMessageFor(m => m.FuncGrade, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.Remark)</td>
            <td>@Html.Kendo().MaskedTextBoxFor(e => e.Remark).HtmlAttributes(new { style = " width:100%" })</td>
            <td>@Html.ValidationMessageFor(m => m.Remark, "*")</td>

        </tr>
    </table>
    @Html.ValidationSummary()
    <div class="formButtons">
        <button class="k-primary k-button" id="saveEditFormButton" role="button" data-role="button">确定</button>&nbsp;&nbsp;
        <button class="k-primary k-button" id="closeEditFormButton" role="button" data-role="button">返回</button>
    </div>
}
<script type="text/javascript">
    $(function () {
        $.validator.unobtrusive.parse(document);
        $("#saveEditFormButton").click(function (e) {
            e.preventDefault();
            saveFormData($("#saveEditFormButton"));
        });
        $("#closeEditFormButton").click(function (e) {
            e.preventDefault();
            closeEditFormWindow();
        });
    });

</script>
