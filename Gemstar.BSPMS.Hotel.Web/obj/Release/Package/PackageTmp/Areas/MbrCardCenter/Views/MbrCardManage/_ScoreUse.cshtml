@model Gemstar.BSPMS.Hotel.Web.Areas.MbrCardCenter.Models.MbrCardManage.MbrCardScoreUseViewModel

<script type="text/javascript">
    $(function () {
        $.validator.unobtrusive.parse(document);
        $("#saveEditFormButton").click(function (e) {
            e.preventDefault();
            saveFormData($("#saveEditFormButton"), function () { $("#dataDiv", $("#mainContent iframe")[0].contentWindow.document).load($("#mainContent iframe")[0].src + "?viewType=false"); });
        });
        $("#closeEditFormButton").click(function (e) {
            e.preventDefault();
            closeEditFormWindow();
        });

        $(".scoreUseScore").css("display", "table-row");
        $(".scoreUseMoney").css("display","none");
        $("#ItemType").change(function () {
            if ($("#ItemType").val() == "02") {
                $(".scoreUseScore").css("display", "none");
                $(".scoreUseMoney").css("display", "table-row");
            }
            else {
                $(".scoreUseScore").css("display", "table-row");
                $(".scoreUseMoney").css("display", "none");
            }
        });

        $("#ItemId").change(function () {
            var id = $("#Id").val();
            var itemId = $("#ItemId").val();
            $.post(
                "/MbrCardCenter/MbrCardManage/GetScoreUseRule",
                { id: id, itemId: itemId },
                function (data) {
                    if (data != null) {
                        $("#Score").val(data.OnlyScore);//仅积分

                        if ((isNaN(data.ScoreAndAmount) || data.ScoreAndAmount <= 0) && (isNaN(data.AmountAndScore) || data.AmountAndScore <= 0)) {
                            $("#PartScore").val(data.OnlyScore);//积分部分
                            $("#PartMoney").val(data.AmountAndScore);//金额部分
                        }
                        else
                        {
                            $("#PartScore").val(data.ScoreAndAmount);//积分部分
                            $("#PartMoney").val(data.AmountAndScore);//金额部分
                        }
                        calculatePayMoney(1);
                    }
                },
            "json");
        });
        //$("#OriginPartMoney").change(function () {
        //    calculatePayMoney(null);
        //});
        $("#PartMoney").change(function () {
            calculatePayMoney(1);
        })
    });
    function calculatePayMoney(e) {
        if (e && e != 1) { e.preventDefault(); }
        var splitstr = "&|&";
        var selectid = $("#PayWayId").data("kendoDropDownList").value();
        if (selectid != null && selectid != undefined && selectid.length > 0) {
            var list = selectid.split(splitstr);
            if (list != null && list.length >= 2) {//为了不让下面异常
                var rate = parseFloat(list[1]);
                if (isNaN(rate) || rate == 0) {
                    rate = 1.0;
                }
                if (e != null) {
                    var partMoney = parseFloat($("#PartMoney").val());
                    if (!isNaN(partMoney)) {
                        $("#OriginPartMoney").val((partMoney / rate).toFixed(2));
                    }
                } else {
                    var originPayMoney = parseFloat($("#OriginPartMoney").val());
                    if (isNaN(originPayMoney)) {
                        originPayMoney = 0;
                    }
                    $("#PartMoney").val((originPayMoney * rate).toFixed(2));
                }
            }
        } else {
            if (e != 1) {
                $("#OriginPartMoney").val("0");
                $("#PartMoney").val("0");
            }
        }
    }
</script>

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.Id)
    <table class="editFormTable">
        <tr>
            <td class="textright">@Html.LabelFor(m => m.MbrCardNo)</td>
            <td>@Html.DisplayTextFor(m => m.MbrCardNo)</td>
            <td></td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.GuestName)</td>
            <td>@Html.DisplayTextFor(m => m.GuestName)</td>
            <td></td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.CurrentScore)</td>
            <td>@Html.DisplayTextFor(m => m.CurrentScore)</td>
            <td></td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.CurrentOwnerScore)</td>
            <td>@Html.DisplayTextFor(m => m.CurrentOwnerScore)</td>
            <td></td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.ItemId)</td>
            <td>@Html.Kendo().DropDownListFor(m => m.ItemId).BindTo(ViewBag.ItemScoreSelectList as SelectList).OptionLabel("--请选择--").HtmlAttributes(new { style = "width:100%;" })</td>
            <td>@Html.ValidationMessageFor(m => m.ItemId, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.ItemType)</td>
            <td>@Html.Kendo().DropDownListFor(m => m.ItemType).HtmlAttributes(new { style = " width:100%" }).BindTo(new List<DropDownListItem>() { new DropDownListItem { Text = "积分兑换", Value = "01" }, new DropDownListItem { Text = "积分加金额兑换", Value = "02" } })</td>
            <td>@Html.ValidationMessageFor(m => m.ItemType, "*")</td>
        </tr>
        <tr class="scoreUseScore">
            <td class="textright">@Html.LabelFor(m => m.Score)</td>
            <td>@Html.TextBoxFor(m => m.Score, new { @class = "k-textbox", style = "width:100%;" })</td>
            <td>@Html.ValidationMessageFor(m => m.Score, "*")</td>
        </tr>
        <tr class="scoreUseMoney">
            <td class="textright">@Html.LabelFor(m => m.PartScore)</td>
            <td>
                @Html.TextBoxFor(m => m.PartScore, new { @class = "k-textbox", style = "width:100%;" })
            </td>
            <td>@Html.ValidationMessageFor(m => m.PartScore, "*")</td>
        </tr>
        <tr class="scoreUseMoney">
            <td class="textright">@Html.LabelFor(m => m.PartMoney)</td>
            <td>
                @Html.TextBoxFor(m => m.PartMoney, new { @class = "k-textbox", style = "width:100%;" })
            </td>
            <td>@Html.ValidationMessageFor(m => m.PartMoney, "*")</td>
        </tr>
        <tr class="scoreUseMoney">
            <td class="textright">@Html.LabelFor(m => m.PayWayId)</td>
            <td>@Html.Kendo().DropDownListFor(m => m.PayWayId).BindTo(ViewBag.PayWapSelectList as List<SelectListItem>).HtmlAttributes(new { style = "width:100%;" }).Events(e => e.Change("calculatePayMoney"))</td>
            <td>@Html.ValidationMessageFor(m => m.PayWayId, "*")</td>
        </tr>
        <tr class="scoreUseMoney">
            <td class="textright">@Html.LabelFor(m => m.OriginPartMoney)</td>
            <td>
                @Html.TextBoxFor(m => m.OriginPartMoney, new { @class = "k-textbox k-state-disabled", style = "width:100%;", @readonly = "readonly" })
            </td>
            <td>@Html.ValidationMessageFor(m => m.OriginPartMoney, "*")</td>
        </tr>
       
        <tr>
            <td class="textright">@Html.LabelFor(m => m.InvNo)</td>
            <td>@Html.TextBoxFor(m => m.InvNo, new { @class = "k-textbox", style = "width:100%;" })</td>
            <td></td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.Remark)</td>
            <td>@Html.TextAreaFor(m => m.Remark, new { @class = "k-textbox", style = "width:100%;" })</td>
            <td>@Html.ValidationMessageFor(m => m.Remark, "*")</td>
        </tr>
    </table>
    @Html.ValidationSummary()
    <div class="formButtons">
        <button class="k-primary k-button" id="saveEditFormButton" role="button" data-role="button">保存</button>&nbsp;&nbsp;
        <button class="k-primary k-button" id="closeEditFormButton" role="button" data-role="button">返回</button>
    </div>
}

