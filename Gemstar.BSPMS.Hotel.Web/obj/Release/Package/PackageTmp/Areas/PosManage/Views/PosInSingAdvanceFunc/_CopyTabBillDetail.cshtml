@using Gemstar.BSPMS.Hotel.Services.EnumsPos;
@using Gemstar.BSPMS.Hotel.Services.EntitiesPosProcedures;
@model Gemstar.BSPMS.Hotel.Web.Areas.PosManage.Models.PosInSingle.ChangeTableModel
<script type="text/javascript">
    //选择行
    function selDetailRowByMerge() {
        var grid = $("#gridSelectByCopy").data("kendoGrid");
        var dataRows = grid.items();
        for (var i = 0; i < dataRows.length; i++) {
            var row = grid.tbody.find(">tr:not(.k-grouping-row)").eq(i);
            var dataRow = grid.dataItem(dataRows[i]);
            
            if (Number(dataRow["Status"]) > 50) {
                row.find("input").attr('disabled', "disabled");
                row.find("input").css('display', "none");
            }
            row.removeClass();
            //根据状态修改背景色
            if (Number(dataRow["Status"]) === 0) {
                row.addClass("normal-state");
            }
            else if (Number(dataRow["Status"]) === 1) {
                row.addClass("case-state");
            }
            else if (Number(dataRow["Status"]) === 2) {
                row.addClass("give-state");
            }
            else if (Number(dataRow["Status"]) === 4) {
                row.addClass("neworder-state");
            }
            else if (Number(dataRow["Status"]) === 51 || Number(dataRow["Status"]) === 52) {
                row.addClass("cancel-state");
            }
            
            //是否套餐明细
            if (dataRow["SD"] == true) {
                row.removeClass();
                row.addClass("package-state");
                row.find("input").attr('disabled', "disabled");
                row.find("input").css('display', "none");
                row.hide();
            }

        }
    }
    function checkedRowAllByMerge(obj) {
        var grid = $("#gridSelectByCopy").data("kendoGrid");
        if ($(obj).is(":checked")) {
            grid.tbody.find(">tr:not(.k-grouping-row) input[type='checkbox']").prop("checked", true);
            var dataRows = grid.items();
            for (var i = 0; i < dataRows.length; i++) {
                var row = grid.tbody.find(">tr:not(.k-grouping-row)").eq(i);
                var data = grid.dataItem(dataRows[i]);
            }
        }
        else {
            grid.tbody.find(">tr:not(.k-grouping-row) input[type='checkbox']").prop("checked", false);
        }
    }
    function checkedRowByMerge() { }
</script>
@{
    var oldModel = ViewBag.oldModel as up_pos_list_billByBillidResult;
    <div style="width:50%;float:left;color:black">
        <table class="billDetail">
            <thead>
                <tr>
                    <td colspan="2">原餐台资料</td>
                </tr>
            </thead>
            <tr class="txtLable">
                <td class="textright">@Html.LabelFor(m => m.newRefeName)：</td>
                <td><span>@oldModel.refeName</span></td>
            </tr>
            <tr class="txtLable">
                <td class="textright">@Html.LabelFor(m => m.newTabName)：</td>
                <td><span>@oldModel.tabName</span></td>
            </tr>
            <tr class="txtLable">
                <td class="textright">@Html.LabelFor(m => m.newServiceRate)：</td>
                <td><span>@oldModel.ServiceRate</span></td>
            </tr>
            <tr class="txtLable">
                <td class="textright">@Html.LabelFor(m => m.newLimit)：</td>
                <td><span>@oldModel.Limit</span></td>
            </tr>
        </table>
    </div>
    <div style="color:black">
        <table class="billDetail">
            <thead>
                <tr>
                    <td colspan="2">新餐台资料</td>
                </tr>
            </thead>
            <tr class="txtLable">
                <td class="textright">@Html.LabelFor(m => m.newRefeName)：</td>
                <td><span>@oldModel.refeName</span></td>
            </tr>
            <tr class="txtLable">
                <td class="textright">@Html.LabelFor(m => m.newTabName)：</td>
                <td>@Model.newTabName</td>
                <td></td>
            </tr>
            <tr class="txtLable">
                <td class="textright">@Html.LabelFor(m => m.newServiceRate)：</td>
                <td>@Model.newServiceRate</td>
                <td></td>
            </tr>
            <tr class="txtLable">
                <td class="textright">@Html.LabelFor(m => m.newLimit)：</td>
                <td>@Model.newLimit</td>
                <td></td>
            </tr>
            <tr class="txtLable">
                <td class="textright">人 数：</td>
                <td><input id="CopyiGuest" type="number" value="1" /></td>
                <td></td>
            </tr>
            <tr class="txtLable">
                <td class="textright">客人类型：</td>
                <td><input type="text" id="CopyCustomerTypeid"></td>
                <td></td>                
            </tr>
        </table>
    </div>
    <div>
        @(Html.Kendo().Grid<up_pos_list_BillDetailByBillidResult>()
            .Name("gridSelectByCopy")
            .Columns(columns =>
            {
                columns.Bound(m => m.Id).Hidden();
                columns.Bound(m => m.Itemid).Hidden();
                columns.Bound(m => m.Unitid).Hidden();
                columns.Bound(m => m.SP).Hidden();
                columns.Bound(m => m.SD).Hidden();
                columns.Bound(m => m.Status).Hidden();
                columns.Bound(m => m.Id).HeaderTemplate("<input type='checkbox' value='#: Id #' onclick='checkedRowAllByMerge(this)' />")
                    .ClientTemplate("<input type='checkbox' value='#: Id #' />").Width(30);
                columns.Bound(m => m.Row).Title("行").HtmlAttributes(new { @style = "white-space: nowrap;" }).Width(40);
                columns.Bound(m => m.ItemName).Title("名称").HtmlAttributes(new { @style = "white-space: nowrap;" }).Width(150);
                columns.Bound(m => m.Quantity).Title("数量").HtmlAttributes(new { @style = "white-space: nowrap;" }).Width(60);
                columns.Bound(m => m.UnitName).Title("单位").HtmlAttributes(new { @style = "white-space: nowrap;" }).Width(60);
                columns.Bound(m => m.Price).Title("价格").HtmlAttributes(new { @style = "white-space: nowrap;" });
            })
            .HtmlAttributes(new { style = "height:calc(100% - 6rem);" })
          .Selectable(s => s.Mode(GridSelectionMode.Single))
            .Scrollable()

            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("ListUpBillDetailByBillid", "PosInSingle", new { billid = Model.oldBillId }))
            )
            .Events(e => e.DataBound("selDetailRowByMerge"))
        )
    </div>
}

<div class="formButtons">
    <input type="button" value="确定" onclick="changeItemByMerge()" />
    <input type="button" value="关闭" onclick="layer.closeAll()" />
</div>

<script type="text/javascript">
    $(function () {
        $("#CopyiGuest").kendoNumericTextBox({
            format: "n0",
            min: 1
        });
        //初始化客人类型下拉
        $.ajax({
            url: '@Url.Action("ListItemsForPosCustomerTypeByModules", "BasicDataPosCustomerType")',
            type: "post",
            dataType: "json",
            success: function (data) {
                $("#CopyCustomerTypeid").kendoDropDownList({
                    dataSource: data, //数据
                    dataTextField: "Text", //显示的下拉文本
                    dataValueField: "Value", //value值
                    noDataTemplate: '没有找到相关数据!',
                    height: 300,
                    autoWidth: true
                });
            },
            error: function (data) {
                layer.alert(data.responseText, { title: "快点云Pos提示" });
            }
        });
    })
    function changeItemByMerge() {
        var selectCount = 0;//选中的数量
        var json = [];
        var grid = $("#gridSelectByCopy").data("kendoGrid");
        var dataRows = grid.items();
        var errorMsg = "";
        for (var i = 0; i < dataRows.length; i++) {
            var row = grid.tbody.find(">tr:not(.k-grouping-row)").eq(i);
            var ck = row.find("input[type=checkbox]");
            if (ck.is(":checked") && ck.attr("disabled") != "disabled") {
                selectCount++;
                var item = {
                    id: ck.val()
                };
                json.push(item);
            }
        }
        if (errorMsg != "") {
            layer.alert(errorMsg, { title: "快点云Pos提示" });
            return false;
        }
        if (parseInt(selectCount) <= 0) {
            layer.alert("请选择需要复制的消费项目", { title: "快点云Pos提示" });
            return false;
        }
        var sourcebillid = '@Model.oldBillId';
        var targettabid = '@Model.newTabId';
        var targetbillid = '@Model.newBillId';
        var itemidarry = JSON.stringify(json);
        $.ajax({
            url: '@Url.Action("CopyItem", "PosInSingAdvanceFunc")',
            type: "post",
            data: { sourcebillid: sourcebillid, targetbillid: targetbillid, targettabid: targettabid, itemidarry: itemidarry, CustomerTypeid: $("#CopyCustomerTypeid").val(), iGuest: $("#CopyiGuest").val()},
            dataType: "json",
            success: function (data) {
                if (data.Success) {
                    $("#grid").data("kendoGrid").dataSource.read();
                    //getStatistics(1);
                    //if ("undefined" != typeof jsObject) {   //封装程序
                    //    if (data.Data.length > 0 && data.Data != "") {
                    //        jsObject.UserName = $("#userName").val();
                    //        jsObject.PrintReportByChangeItem("转菜通知单", "ChangeItemTable", data.Data, false, false);
                    //    }
                    //}
                    layer.confirm(data.Data, {
                        btn: ['确定', '取消'], //按钮
                        title: '快点云Pos提示',
                        shade: 'rgba(0,0,0,0)'
                    }, function () {
                        layer.closeAll();

                    }, function () {
                        layer.closeAll();
                    });
                }
                else {
                    layer.alert(data.Data, { title: "快点云Pos提示" });
                }
            },
            error: function (data) {
                layer.alert(data.responseText, { title: "快点云Pos提示" });
            }
        });
    }
</script>
