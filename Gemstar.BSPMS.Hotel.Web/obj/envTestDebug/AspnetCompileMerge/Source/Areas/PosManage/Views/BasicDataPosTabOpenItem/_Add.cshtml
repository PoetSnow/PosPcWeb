@model Gemstar.BSPMS.Hotel.Web.Areas.PosManage.Models.BasicDataPosService.PosTabOpenItemAddViewModel

<script type="text/javascript">
    function openItemModuleChanged() {
        var Refeid = $("#Refeid").data("kendoDropDownList");
        Refeid.dataSource.read();

        var TabTypeid = $("#TabTypeid").data("kendoDropDownList");
        TabTypeid.dataSource.read();

        var Itemid = $("#Itemid").data("kendoDropDownList");
        Itemid.dataSource.read();
    }

    function posCode_paras() {
        var module = $("#Module").data("kendoDropDownList");
        var moduleCode = module.value();
        return {
            moduleCode: moduleCode
        };
    }

    function openItemChanged() {
        var Unitid = $("#Unitid").data("kendoDropDownList");
        Unitid.dataSource.read();
    }

    function posItem_paras() {
        var item = $("#Itemid").data("kendoDropDownList");
        var itemid = item.value();
        return {
            itemid: itemid
        };
    }

    function unitChanged() {
        var item = $("#Itemid").data("kendoDropDownList");
        var itemid = item.value();
        var unit = $("#Unitid").data("kendoDropDownList");
        var unitid = unit.value();

        $.ajax({
            url: '@Url.Action("GetItemPriceByUnititId", "BasicDataPosItemPrice", new { rnd = new Random().NextDouble() })',
            data: { itemid: itemid, unitid: unitid },
            type: "post",
            dataType: "json",
            success: function (data) {
                var obj = data.Data;
                if (obj != "") {
                    var price = $("#Price").data("kendoNumericTextBox");
                    price.value(obj.Price);
                }
            },
            error: function (data) {
                layer.alert(data.responseText, { title: "快点云Pos提示" });
            }
        });
    }
</script>

@using (Html.BeginForm())
{
    <table class="editFormTable">
        <tr>
            <td class="textright">@Html.LabelFor(m => m.Module)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.Module).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosModules", "BasicDataPosPos", new { rnd = new Random().NextDouble() })); }).Events(e => e.Change("openItemModuleChanged"))</td>
            <td>@Html.ValidationMessageFor(m => m.Module, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.Refeid)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.Refeid).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosRefeByModules", "BasicDataPosRefe", new { rnd = new Random().NextDouble() }).Data("posCode_paras")).ServerFiltering(true); }).OptionLabel("全部营业点")</td>
            <td>@Html.ValidationMessageFor(m => m.Refeid, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.TabTypeid)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.TabTypeid).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosTabtypeByModules", "BasicDataPosTabtype", new { rnd = new Random().NextDouble() }).Data("posCode_paras")).ServerFiltering(true); }).OptionLabel("全部餐台类型")</td>
            <td>@Html.ValidationMessageFor(m => m.TabTypeid, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.ITagperiod)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.ITagperiod).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosITagperiod", "BasicDataPosPos", new { rnd = new Random().NextDouble() })); })</td>
            <td>@Html.ValidationMessageFor(m => m.ITagperiod, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.StartTime)</td>
            <td>@Html.Kendo().MaskedTextBoxFor(m => m.StartTime).Mask("00:00").HtmlAttributes(new { style = "width:100%;" }).Value("00:00")</td>
            <td>@Html.ValidationMessageFor(m => m.StartTime, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.EndTime)</td>
            <td>@Html.Kendo().MaskedTextBoxFor(m => m.EndTime).Mask("00:00").HtmlAttributes(new { style = "width:100%;" }).Value("23:59")</td>
            <td>@Html.ValidationMessageFor(m => m.EndTime, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.Itemid)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.Itemid).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosOpenItemByModules", "BasicDataPosItem", new { rnd = new Random().NextDouble() }).Data("posCode_paras")).ServerFiltering(true); }).OptionLabel("请选择消费项目").Events(e => e.Change("openItemChanged"))</td>
            <td>@Html.ValidationMessageFor(m => m.Itemid, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.Unitid)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.Unitid).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForItemPriceByItemId", "BasicDataPosItemPrice", new { rnd = new Random().NextDouble() }).Data("posItem_paras")).ServerFiltering(true); }).OptionLabel("请选择单位").Events(e => e.Change("unitChanged"))</td>
            <td>@Html.ValidationMessageFor(m => m.Unitid, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.Quantity)</td>
            <td>@Html.Kendo().NumericTextBoxFor(m => m.Quantity).HtmlAttributes(new { style = "width:100%;" }).Value(1)</td>
            <td>@Html.ValidationMessageFor(m => m.Quantity, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.Price)</td>
            <td>@Html.Kendo().NumericTextBoxFor(m => m.Price).HtmlAttributes(new { style = "width:100%;" })</td>
            <td>@Html.ValidationMessageFor(m => m.Price, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.QuanMode)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.QuanMode).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosQuanMode", "BasicDataPosPos", new { rnd = new Random().NextDouble() })); }).OptionLabel("请选择数量方式")</td>
            <td>@Html.ValidationMessageFor(m => m.QuanMode, "*")</td>

            <td class="textright">@Html.LabelFor(m => m.IsCharge)</td>
            <td>@Html.Kendo().DropDownListFor(e => e.IsCharge).HtmlAttributes(new { style = " width:100%" }).DataTextField("Text").DataValueField("Value").DataSource(e => { e.Read(r => r.Action("ListItemsForPosIsCharge", "BasicDataPosPos", new { rnd = new Random().NextDouble() })); }).OptionLabel("请选择收费状态")</td>
            <td>@Html.ValidationMessageFor(m => m.IsCharge, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.IsProduce)</td>
            <td>@Html.Kendo().CheckBoxFor(m => m.IsProduce).HtmlAttributes(new { style = "width:100%;" })</td>
            <td>@Html.ValidationMessageFor(m => m.IsProduce, "*")</td>
            <td class="textright">@Html.LabelFor(m => m.IsCancel)</td>
            <td>@Html.Kendo().CheckBoxFor(m => m.IsCancel).HtmlAttributes(new { style = "width:100%;" })</td>
            <td>@Html.ValidationMessageFor(m => m.IsCancel, "*")</td>
        </tr>
        <tr>
            <td class="textright">@Html.LabelFor(m => m.Remark)</td>
            <td>@Html.Kendo().TextBoxFor(m => m.Remark).HtmlAttributes(new { style = "width:100%;" })</td>
            <td>@Html.ValidationMessageFor(m => m.Remark, "*")</td>
        </tr>
    </table>
    @Html.ValidationSummary()
    <div class="formButtons">
        <button class="k-primary k-button" id="saveEditFormButton" role="button" data-role="button">确定</button>&nbsp;&nbsp;
        <button class="k-primary k-button" id="closeEditFormButton" role="button" data-role="button">返回</button>
    </div>
}
<script type="text/javascript">
    $(function () {
        $.validator.unobtrusive.parse(document);
        $("#saveEditFormButton").click(function (e) {
            e.preventDefault();
            saveFormData($("#saveEditFormButton"));
        });
        $("#closeEditFormButton").click(function (e) {
            e.preventDefault();
            closeEditFormWindow();
        });
        openItemModuleChanged();
    });

</script>
